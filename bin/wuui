#!/usr/bin/env node

process.env.NODE_PATH = __dirname + '/../node_modules/'
const { resolve } = require('path')
const res = command => resolve(__dirname, '../commands/', command)
const MModule = require('../commands/module')
const Page = require('../commands/page')
const Control = require('../commands/control')
const program = require('commander')

program
  .version(require('../package').version )

program
  .usage('<command>')

// Command: wuui init
program
  .command('init')
  .description('生产一个新的')
  .alias('i')
  .action(() => {
    require(res('init'))
  })

// Command: wuui lsit
program
  .command('list')
  .description('查询所有项目模版')
  .alias('l')
  .action(() => {
    require(res('list'))
  })

// Command: wuui module [moduleName]
program
  .command('module [moduleName]')
  .alias('m')
  .description('创建新的模块')
  .option('--name [moduleName]', '模块名称')
  .action(function(moduleName, option) {
    let mmodule = new MModule({
      moduleName: moduleName || option.name
    })
    mmodule.create()
  }).on('--help', function() {
    console.log('  Examples:')
    console.log('')
    console.log('    $ wuui module name')
    console.log('    $ wuui m name')
    console.log()
  })

// Command: wuui page [pageName]
program
  .command('page [pageName]')
  .alias('p')
  .description('创建新的页面')
  .option('-n, --name [pageName]', '页面名称')
  .option('-p, --path [moduleName]', '模块名称')
  .option('-s, --styl', '启用stylus')
  .action(function(pageName, option) {
    let page = new Page({
      pageName: pageName || option.name,
      moduleName: option.path,
      styl: option.styl
    })
    page.create()
  }).on('--help', function() {
    console.log('  Examples:');
    console.log('');
    console.log('    $ wuui page name');
    console.log('    $ wuui p name');
    console.log()
  })

// Command: wuui control [controlName]
program
  .command('control [controlName]')
  .alias('c')
  .description('创建新的控件')
  .option('-n, --name [controlName]', '控件名称')
  .option('-s, --styl', '启用stylus')
  .action(function(controlName, option) {
    let control = new Control({
      controlName: controlName || option.name,
      styl: option.styl
    })
    control.create()
  }).on('--help', function() {
    console.log('  Examples:');
    console.log('');
    console.log('    $ wuui control name');
    console.log('    $ wuui c name');
    console.log()
  })


program.parse(process.argv)

if (!process.argv.slice(2).length) {
  program.outputHelp()
}